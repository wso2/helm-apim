# -------------------------------------------------------------------------------------
#
# Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com). All Rights Reserved.
#
# This software is the property of WSO2 LLC. and its suppliers, if any.
# Dissemination of any information or reproduction of any material contained 
# herein is strictly forbidden, unless permitted by WSO2 in accordance with the 
# WSO2 Commercial License available at https://wso2.com/licenses/eula/3.2
#
# --------------------------------------------------------------------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "apim-helm-gw.fullname" . }}-deployment
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.wso2.deployment.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.wso2.deployment.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.wso2.deployment.strategy.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      deployment: {{ template "apim-helm-gw.fullname" . }}
  template:
    metadata:
      annotations:
        {{- if .Values.kubernetes.enableAppArmor }}
        container.apparmor.security.beta.kubernetes.io/wso2am-gateway: runtime/default
        {{- end }}
        checksum.am.gw.conf: {{ include (print $.Template.BasePath "/gateway/wso2am-gateway-conf.yaml") . | sha256sum }}
        checksum.am.gw.conf.log4j2: {{ include (print $.Template.BasePath "/gateway/wso2am-gateway-conf-log4j2.yaml") . | sha256sum }}
        checksum.am.cp.conf.secret: {{ include (print $.Template.BasePath "/gateway/wso2am-gateway-conf-secret-conf.yaml") . | sha256sum }}
      labels:
        deployment: {{ template "apim-helm-gw.fullname" . }}
        product: apim
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: deployment
                  operator: In
                  values:
                  - {{ template "apim-helm-gw.fullname" . }}
              topologyKey: "topology.kubernetes.io/zone"
            weight: 100
      {{- if .Values.wso2.apim.secureVaultEnabled }} 
      {{- if .Values.aws.enabled }}
      serviceAccount: {{ .Values.aws.serviceAccountName }}
      {{- else if .Values.gcp.enabled }}
      serviceAccount: {{ .Values.gcp.serviceAccountName }}
      {{- else if .Values.azure.enabled }}
      serviceAccount: {{ .Values.azure.serviceAccountName }}
      {{- end }}
      {{- end }}
      securityContext:
        seccompProfile:
          type: {{ .Values.kubernetes.securityContext.seccompProfile.type }}
          {{- if eq .Values.kubernetes.securityContext.seccompProfile.type "Localhost" }}
          localhostProfile: {{ .Values.kubernetes.securityContext.seccompProfile.localhostProfile }}
          {{- end }}
      {{- if and .Values.wso2.deployment.image.imagePullSecrets.enabled }}
      imagePullSecrets:
      - name: {{ template "apim-helm-gw.fullname" . }}-docker-registry-auth
      {{- end }}
      containers:
      - name: wso2am-gateway
        image: {{ .Values.wso2.deployment.image.registry }}/{{ .Values.wso2.deployment.image.repository }}@{{ .Values.wso2.deployment.image.digest }}
        imagePullPolicy: {{ .Values.wso2.deployment.imagePullPolicy }}
        env:
        - name: PROFILE_NAME
          value: gateway-worker
        - name: NODE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: JVM_MEM_OPTS
          value: "-Xms{{ .Values.wso2.deployment.resources.jvm.memory.xms }} -Xmx{{ .Values.wso2.deployment.resources.jvm.memory.xmx }}"
        startupProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - timeout 1 bash -c "</dev/tcp/localhost/{{ add 9443 .Values.wso2.apim.portOffset }}"
          initialDelaySeconds: {{ .Values.wso2.deployment.startupProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.wso2.deployment.startupProbe.periodSeconds }}
          failureThreshold: {{ .Values.wso2.deployment.startupProbe.failureThreshold }}
        livenessProbe:
          httpGet:
              path: /services/Version
              port: {{ add 9763 .Values.wso2.apim.portOffset }}
          initialDelaySeconds: {{ .Values.wso2.deployment.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.wso2.deployment.livenessProbe.periodSeconds }}
          failureThreshold: {{ .Values.wso2.deployment.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: /api/am/gateway/v2/server-startup-healthcheck
            port: {{ add 9443 .Values.wso2.apim.portOffset }}
            scheme: HTTPS
          initialDelaySeconds: {{ .Values.wso2.deployment.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.wso2.deployment.readinessProbe.periodSeconds }}
          failureThreshold: {{ .Values.wso2.deployment.readinessProbe.failureThreshold }}
        lifecycle:
          preStop:
            exec:
              command:
                - "sh"
                - "-c"
                - >
                  echo "Pre stop hook triggered";
                  sleep {{ .Values.wso2.deployment.lifecycle.preStopHook.sleepSeconds }};
                  echo "Shutdown APIM Server";
                  ${WSO2_SERVER_HOME}/bin/gateway.sh stop
        resources:
          requests:
            memory: {{ .Values.wso2.deployment.resources.requests.memory }}
            cpu: {{ .Values.wso2.deployment.resources.requests.cpu }}
          limits:
            memory: {{ .Values.wso2.deployment.resources.limits.memory }}
            cpu: {{ .Values.wso2.deployment.resources.limits.cpu }}
        securityContext:
          runAsUser: {{ .Values.kubernetes.securityContext.runAsUser }}
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          {{- if .Values.kubernetes.securityContext.seLinux.enabled }}
          seLinuxOptions:
            level: {{ .Values.kubernetes.securityContext.seLinux.level }}
          {{- end }}
          capabilities:
            drop: ["ALL"]
        ports:
        - containerPort: {{ add 8280 .Values.wso2.apim.portOffset }}
          protocol: TCP
        - containerPort: {{ add 8243 .Values.wso2.apim.portOffset }}
          protocol: TCP
        - containerPort: {{ add 9763 .Values.wso2.apim.portOffset }}
          protocol: TCP
        - containerPort: {{ add 9443 .Values.wso2.apim.portOffset }}
          protocol: TCP
        - containerPort: {{ add 9099 .Values.wso2.apim.portOffset }}
          protocol: TCP
        - containerPort: {{ add 8099 .Values.wso2.apim.portOffset }}
          protocol: TCP
        - containerPort: {{ add 9021 .Values.wso2.apim.portOffset }}
          protocol: TCP
        - containerPort: {{ add 8021 .Values.wso2.apim.portOffset }}
          protocol: TCP
        volumeMounts:
        - name: wso2am-gateway-conf
          mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/deployment.toml
          subPath: deployment.toml
        - name: wso2am-gateway-entrypoint
          mountPath: /home/wso2carbon/docker-entrypoint.sh
          subPath: docker-entrypoint.sh
        - name: wso2am-gateway-log4j2
          mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/log4j2.properties
          subPath: log4j2.properties
        {{- if .Values.wso2.apim.mountStartupScript }}
        - name: wso2am-sh-conf
          mountPath: /home/wso2carbon/wso2-config-volume/bin/gateway.sh
          subPath: gateway.sh
        {{- end }}
        {{- if .Values.wso2.apim.secureVaultEnabled }}
        - name: wso2am-gateway-secret-conf
          mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/security/secret-conf.properties
          subPath: secret-conf.properties
        - name: wso2am-gateway-secret-store-csi
          mountPath: /mnt/secrets-store
          readOnly: true
        {{- end }}
        - name: wso2am-gateway-keystores
          mountPath: /home/wso2carbon/wso2-config-volume/repository/resources/security/{{ .Values.wso2.apim.configurations.security.truststore.name }}
          subPath: {{ .Values.wso2.apim.configurations.security.truststore.name }}
        {{- if .Values.wso2.apim.configurations.security.keystores.primary.enabled }}
        - name: wso2am-gateway-keystores
          mountPath: /home/wso2carbon/wso2-config-volume/repository/resources/security/{{ .Values.wso2.apim.configurations.security.keystores.primary.name }}
          subPath: {{ .Values.wso2.apim.configurations.security.keystores.primary.name }}
        {{- end }}
        {{- if .Values.wso2.apim.configurations.security.keystores.tls.enabled }}
        - name: wso2am-gateway-keystores
          mountPath: /home/wso2carbon/wso2-config-volume/repository/resources/security/{{ .Values.wso2.apim.configurations.security.keystores.tls.name }}
          subPath: {{ .Values.wso2.apim.configurations.security.keystores.tls.name }}
        {{- end }}
        {{- if .Values.wso2.apim.configurations.security.keystores.internal.enabled }}
        - name: wso2am-gateway-keystores
          mountPath: /home/wso2carbon/wso2-config-volume/repository/resources/security/{{ .Values.wso2.apim.configurations.security.keystores.internal.name }}
          subPath: {{ .Values.wso2.apim.configurations.security.keystores.internal.name }}
        {{- end }}
      {{- if .Values.wso2.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.wso2.deployment.nodeSelector | nindent 8 }}
      {{- end }}
      volumes:
      - name: wso2am-gateway-conf
        configMap:
          name: {{ template "apim-helm-gw.fullname" . }}-conf
          defaultMode: 0407
      - name: wso2am-gateway-entrypoint
        configMap:
          name: {{ template "apim-helm-gw.fullname" . }}-conf-entrypoint
          defaultMode: {{ .Values.kubernetes.configMaps.scripts.defaultMode }}
      - name: wso2am-gateway-log4j2
        configMap:
          name: {{ template "apim-helm-gw.fullname" . }}-conf-log4j2
          defaultMode: 0407
      {{- if .Values.wso2.apim.mountStartupScript }}
      - name: wso2am-sh-conf
        configMap:
          name: {{ template "apim-helm-gw.fullname" . }}-conf-sh
          defaultMode: {{ .Values.kubernetes.configMaps.scripts.defaultMode }}
      {{- end }}
      {{- if .Values.wso2.apim.secureVaultEnabled }}
      - name: wso2am-gateway-secret-conf
        configMap:
          name: {{ template "apim-helm-gw.fullname" . }}-conf-secret-conf
      - name: wso2am-gateway-secret-store-csi
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          {{- if .Values.azure.enabled }}
          volumeAttributes:
            secretProviderClass: {{ .Values.azure.keyVault.secretProviderClass }}
          nodePublishSecretRef:
            name: {{ .Values.azure.keyVault.activeDirectory.servicePrincipal.credentialsSecretName }}
          {{- else if .Values.aws.enabled }}
          volumeAttributes:
            secretProviderClass: {{ .Values.aws.secretsManager.secretProviderClass }}
          {{- else if .Values.gcp.enabled }}
          volumeAttributes:
            secretProviderClass: {{ .Values.gcp.secretsManager.secretProviderClass }}
          {{- end }}
      {{- end }}
      - name: wso2am-gateway-keystores
        secret:
          secretName: {{ .Values.wso2.apim.configurations.security.jksSecretName }}
