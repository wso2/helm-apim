# distributed/mysql/values.yaml

# MySQL Authentication
auth:
  rootPassword: "rootPass123"
  username: "wso2user"
  password: "wso2pass123"
  database: "initdb"

# Primary (Master) Configuration
primary:
  # Persistence settings â€” CRITICAL for Alibaba Cloud
  persistence:
    enabled: true
    storageClass: "alicloud-disk-efficiency"
    size: 10Gi
    accessModes:
      - ReadWriteOnce
    annotations: {}
    subPath: ""

  # Optional: Resources
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

# Init scripts to create WSO2 databases and users
initdbScripts:
  create-dbs.sql: |
    CREATE DATABASE IF NOT EXISTS apim_db CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
    CREATE DATABASE IF NOT EXISTS shared_db CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
    CREATE DATABASE IF NOT EXISTS tm_db CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

    CREATE USER 'apimadmin'@'%' IDENTIFIED BY 'apimadminpass123';
    GRANT ALL PRIVILEGES ON apim_db.* TO 'apimadmin'@'%';

    CREATE USER 'sharedadmin'@'%' IDENTIFIED BY 'sharedadminpass123';
    GRANT ALL PRIVILEGES ON shared_db.* TO 'sharedadmin'@'%';

    CREATE USER 'tmadmin'@'%' IDENTIFIED BY 'tmadminpass123';
    GRANT ALL PRIVILEGES ON tm_db.* TO 'tmadmin'@'%';

    FLUSH PRIVILEGES;

# Architecture: standalone (no replication)
architecture: standalone

# Image (optional override)
image:
  registry: docker.io
  repository: bitnami/mysql
  tag: 8.0.34-debian-11-r31
  pullPolicy: IfNotPresent

# Pod Security Context
podSecurityContext:
  enabled: true
  fsGroup: 1001

containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true

# Service
service:
  port: 3306
  type: ClusterIP

# Disable metrics (unless needed)
metrics:
  enabled: false

# Global settings (optional)
global:
  imageRegistry: ""
  imagePullSecrets: []